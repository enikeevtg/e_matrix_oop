EMatrix matrix:
EMatrix() {
	matrix = 0x7ffedfd326e0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  // EMatrix()
~EMatrix() {
	matrix = 0x7ffedfd326e0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	matrix = 0x7ffedfd326e0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  //~EMatrix()
========================================================

EMatrix* matrix = new EMatrix:
EMatrix() {
	matrix = 0x7f8e414059b0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  // EMatrix()
~EMatrix() {
	matrix = 0x7f8e414059b0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	matrix = 0x7f8e414059b0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  //~EMatrix()
========================================================

EMatrix matrix(2, 2):
EMatrix(int rows, int cols) {
	matrix = 0x7ffedfd326d0
	matrix.matrix_ = 0
	matrix.rows_ = 2
	matrix.cols_ = 2
	CreateMatrix() {
		matrix = 0x7ffedfd326d0
		matrix.matrix_ = 0x7f8e414059c0
		matrix.rows_ = 2
		matrix.cols_ = 2
		printMatrix() {
			0x7f8e414059d0: 0 0
			0x7f8e414059e0: 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
}  // EMatrix(int rows, int cols)
~EMatrix() {
	matrix = 0x7ffedfd326d0
	matrix.matrix_ = 0x7f8e414059c0
	matrix.rows_ = 2
	matrix.cols_ = 2
	DeleteMatrix() {
		matrix = 0x7ffedfd326d0
		matrix.matrix_ = 0
		matrix.rows_ = 2
		matrix.cols_ = 2
	}  // DeleteMatrix()
	matrix = 0x7ffedfd326d0
	matrix.matrix_ = 0
	matrix.rows_ = 2
	matrix.cols_ = 2
}  //~EMatrix()
========================================================

EMatrix* matrix = new EMatrix(11, 11):
EMatrix(int rows, int cols) {
	matrix = 0x7f8e414059b0
	matrix.matrix_ = 0
	matrix.rows_ = 11
	matrix.cols_ = 11
	CreateMatrix() {
		matrix = 0x7f8e414059b0
		matrix.matrix_ = 0x7f8e41809800
		matrix.rows_ = 11
		matrix.cols_ = 11
		printMatrix() {
			0x7f8e41809858: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e418098b0: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809908: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809960: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e418099b8: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809a10: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809a68: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809ac0: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809b18: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809b70: 0 0 0 0 0 0 0 0 0 0 0
			0x7f8e41809bc8: 0 0 0 0 0 0 0 0 0 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
}  // EMatrix(int rows, int cols)
~EMatrix() {
	matrix = 0x7f8e414059b0
	matrix.matrix_ = 0x7f8e41809800
	matrix.rows_ = 11
	matrix.cols_ = 11
	DeleteMatrix() {
		matrix = 0x7f8e414059b0
		matrix.matrix_ = 0
		matrix.rows_ = 11
		matrix.cols_ = 11
	}  // DeleteMatrix()
	matrix = 0x7f8e414059b0
	matrix.matrix_ = 0
	matrix.rows_ = 11
	matrix.cols_ = 11
}  //~EMatrix()
========================================================

EMatrix matrix_src(5, 5) && matrix_src.matrixInlinePrinting():
EMatrix(int rows, int cols) {
	matrix = 0x7ffedfd326c0
	matrix.matrix_ = 0
	matrix.rows_ = 5
	matrix.cols_ = 5
	CreateMatrix() {
		matrix = 0x7ffedfd326c0
		matrix.matrix_ = 0x7f8e41405a60
		matrix.rows_ = 5
		matrix.cols_ = 5
		printMatrix() {
			0x7f8e41405a88: 0 0 0 0 0
			0x7f8e41405ab0: 0 0 0 0 0
			0x7f8e41405ad8: 0 0 0 0 0
			0x7f8e41405b00: 0 0 0 0 0
			0x7f8e41405b28: 0 0 0 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
}  // EMatrix(int rows, int cols)
matrix_src filling:
		printMatrix() {
			0x7f8e41405a88: 0 1 2 3 4
			0x7f8e41405ab0: 5 6 7 8 9
			0x7f8e41405ad8: 10 11 12 13 14
			0x7f8e41405b00: 15 16 17 18 19
			0x7f8e41405b28: 20 21 22 23 24
		}  // PrintMatrix()
EMatrix(const EMatrix& other) {
	matrix = 0x7ffedfd326b0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	operator=(const EMatrix& other) {
		matrix = 0x7ffedfd326b0
		matrix.matrix_ = 0
		matrix.rows_ = 0
		matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	CreateMatrix() {
		matrix = 0x7ffedfd326b0
		matrix.matrix_ = 0x7f8e41405b50
		matrix.rows_ = 5
		matrix.cols_ = 5
		printMatrix() {
			0x7f8e41405b78: 0 0 0 0 0
			0x7f8e41405ba0: 0 0 0 0 0
			0x7f8e41405bc8: 0 0 0 0 0
			0x7f8e41405bf0: 0 0 0 0 0
			0x7f8e41405c18: 0 0 0 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
		printMatrix() {
			0x7f8e41405b78: 0 1 2 3 4
			0x7f8e41405ba0: 5 6 7 8 9
			0x7f8e41405bc8: 10 11 12 13 14
			0x7f8e41405bf0: 15 16 17 18 19
			0x7f8e41405c18: 20 21 22 23 24
		}  // PrintMatrix()
	}  // operator=(const EMatrix& other)
		// copied from: other.matrix_ = 0x7f8e41405a60
	matrix = 0x7ffedfd326b0
	matrix.matrix_ = 0x7f8e41405b50
	matrix.rows_ = 5
	matrix.cols_ = 5
		printMatrix() {
			0x7f8e41405b78: 0 1 2 3 4
			0x7f8e41405ba0: 5 6 7 8 9
			0x7f8e41405bc8: 10 11 12 13 14
			0x7f8e41405bf0: 15 16 17 18 19
			0x7f8e41405c18: 20 21 22 23 24
		}  // PrintMatrix()
}  //EMatrix(const EMatrix& other)
~EMatrix() {
	matrix = 0x7ffedfd326b0
	matrix.matrix_ = 0x7f8e41405b50
	matrix.rows_ = 5
	matrix.cols_ = 5
	DeleteMatrix() {
		matrix = 0x7ffedfd326b0
		matrix.matrix_ = 0
		matrix.rows_ = 5
		matrix.cols_ = 5
	}  // DeleteMatrix()
	matrix = 0x7ffedfd326b0
	matrix.matrix_ = 0
	matrix.rows_ = 5
	matrix.cols_ = 5
}  //~EMatrix()
~EMatrix() {
	matrix = 0x7ffedfd326c0
	matrix.matrix_ = 0x7f8e41405a60
	matrix.rows_ = 5
	matrix.cols_ = 5
	DeleteMatrix() {
		matrix = 0x7ffedfd326c0
		matrix.matrix_ = 0
		matrix.rows_ = 5
		matrix.cols_ = 5
	}  // DeleteMatrix()
	matrix = 0x7ffedfd326c0
	matrix.matrix_ = 0
	matrix.rows_ = 5
	matrix.cols_ = 5
}  //~EMatrix()
===================END===================
Process:         man_test_runner [35638]
Path:            /opt/goinfre/*/man_test_runner
Load Address:    0x10fecd000
Identifier:      man_test_runner
Version:         ???
Code Type:       X86-64
Platform:        macOS
Parent Process:  leaks [35637]

Date/Time:       2023-08-26 00:01:36.935 +0300
Launch Time:     2023-08-26 00:01:36.463 +0300
OS Version:      macOS 11.6.6 (20G624)
Report Version:  7
Analysis Tool:   /Applications/Xcode.app/Contents/Developer/usr/bin/leaks
Analysis Tool Version:  Xcode 13.2.1 (13C100)

Physical footprint:         472K
Physical footprint (peak):  472K
----

leaks Report Version: 4.0
Process 35638: 172 nodes malloced for 84 KB
Process 35638: 0 leaks for 0 total leaked bytes.

