EMatrix matrix:
EMatrix() {
	matrix = 0x7ffee14b06f0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  // EMatrix()
~EMatrix() {
	matrix = 0x7ffee14b06f0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	matrix = 0x7ffee14b06f0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  //~EMatrix()
========================================================

EMatrix* matrix = new EMatrix:
EMatrix() {
	matrix = 0x7fa77dc059d0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  // EMatrix()
~EMatrix() {
	matrix = 0x7fa77dc059d0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	matrix = 0x7fa77dc059d0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  //~EMatrix()
========================================================

EMatrix matrix(2, 2):
EMatrix(int rows, int cols) {
	matrix = 0x7ffee14b06f0
	matrix.matrix_ = 0
	matrix.rows_ = 2
	matrix.cols_ = 2
	CreateMatrix() {
		matrix = 0x7ffee14b06f0
		matrix.matrix_ = 0x7fa77dc059f0
		matrix.rows_ = 2
		matrix.cols_ = 2
		printMatrix() {
			0x7fa77dc05a00: 0 0
			0x7fa77dc05a10: 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
}  // EMatrix(int rows, int cols)
~EMatrix() {
	matrix = 0x7ffee14b06f0
	matrix.matrix_ = 0x7fa77dc059f0
	matrix.rows_ = 2
	matrix.cols_ = 2
	DeleteMatrix() {
		matrix = 0x7ffee14b06f0
		matrix.matrix_ = 0
		matrix.rows_ = 2
		matrix.cols_ = 2
	}  // DeleteMatrix()
	matrix = 0x7ffee14b06f0
	matrix.matrix_ = 0
	matrix.rows_ = 2
	matrix.cols_ = 2
}  //~EMatrix()
========================================================

EMatrix* matrix = new EMatrix(11, 11):
EMatrix(int rows, int cols) {
	matrix = 0x7fa77dc05a70
	matrix.matrix_ = 0
	matrix.rows_ = 11
	matrix.cols_ = 11
	CreateMatrix() {
		matrix = 0x7fa77dc05a70
		matrix.matrix_ = 0x7fa77e009800
		matrix.rows_ = 11
		matrix.cols_ = 11
		printMatrix() {
			0x7fa77e009858: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e0098b0: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009908: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009960: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e0099b8: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009a10: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009a68: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009ac0: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009b18: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009b70: 0 0 0 0 0 0 0 0 0 0 0
			0x7fa77e009bc8: 0 0 0 0 0 0 0 0 0 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
}  // EMatrix(int rows, int cols)
~EMatrix() {
	matrix = 0x7fa77dc05a70
	matrix.matrix_ = 0x7fa77e009800
	matrix.rows_ = 11
	matrix.cols_ = 11
	DeleteMatrix() {
		matrix = 0x7fa77dc05a70
		matrix.matrix_ = 0
		matrix.rows_ = 11
		matrix.cols_ = 11
	}  // DeleteMatrix()
	matrix = 0x7fa77dc05a70
	matrix.matrix_ = 0
	matrix.rows_ = 11
	matrix.cols_ = 11
}  //~EMatrix()
========================================================

EMatrix matrix_src(5, 5):
EMatrix(int rows, int cols) {
	matrix = 0x7ffee14b06e0
	matrix.matrix_ = 0
	matrix.rows_ = 5
	matrix.cols_ = 5
	CreateMatrix() {
		matrix = 0x7ffee14b06e0
		matrix.matrix_ = 0x7fa77dc05a90
		matrix.rows_ = 5
		matrix.cols_ = 5
		printMatrix() {
			0x7fa77dc05ab8: 0 0 0 0 0
			0x7fa77dc05ae0: 0 0 0 0 0
			0x7fa77dc05b08: 0 0 0 0 0
			0x7fa77dc05b30: 0 0 0 0 0
			0x7fa77dc05b58: 0 0 0 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
}  // EMatrix(int rows, int cols)
matrix_src filling:
		printMatrix() {
			0x7fa77dc05ab8: 0 1 2 3 4
			0x7fa77dc05ae0: 5 6 7 8 9
			0x7fa77dc05b08: 10 11 12 13 14
			0x7fa77dc05b30: 15 16 17 18 19
			0x7fa77dc05b58: 20 21 22 23 24
		}  // PrintMatrix()
EMatrix(const EMatrix& other) {
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	operator=(const EMatrix& other) {
		matrix = 0x7ffee14b06c0
		matrix.matrix_ = 0
		matrix.rows_ = 0
		matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	CreateMatrix() {
		matrix = 0x7ffee14b06c0
		matrix.matrix_ = 0x7fa77dc05b80
		matrix.rows_ = 5
		matrix.cols_ = 5
		printMatrix() {
			0x7fa77dc05ba8: 0 0 0 0 0
			0x7fa77dc05bd0: 0 0 0 0 0
			0x7fa77dc05bf8: 0 0 0 0 0
			0x7fa77dc05c20: 0 0 0 0 0
			0x7fa77dc05c48: 0 0 0 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
	matrix_dest after copying:
		printMatrix() {
			0x7fa77dc05ba8: 0 1 2 3 4
			0x7fa77dc05bd0: 5 6 7 8 9
			0x7fa77dc05bf8: 10 11 12 13 14
			0x7fa77dc05c20: 15 16 17 18 19
			0x7fa77dc05c48: 20 21 22 23 24
		}  // PrintMatrix()
	}  // operator=(const EMatrix& other)
		// copied from: other.matrix_ = 0x7fa77dc05a90
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0x7fa77dc05b80
	matrix.rows_ = 5
	matrix.cols_ = 5
		printMatrix() {
			0x7fa77dc05ba8: 0 1 2 3 4
			0x7fa77dc05bd0: 5 6 7 8 9
			0x7fa77dc05bf8: 10 11 12 13 14
			0x7fa77dc05c20: 15 16 17 18 19
			0x7fa77dc05c48: 20 21 22 23 24
		}  // PrintMatrix()
}  //EMatrix(const EMatrix& other)
~EMatrix() {
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0x7fa77dc05b80
	matrix.rows_ = 5
	matrix.cols_ = 5
	DeleteMatrix() {
		matrix = 0x7ffee14b06c0
		matrix.matrix_ = 0
		matrix.rows_ = 5
		matrix.cols_ = 5
	}  // DeleteMatrix()
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0
	matrix.rows_ = 5
	matrix.cols_ = 5
}  //~EMatrix()
~EMatrix() {
	matrix = 0x7ffee14b06e0
	matrix.matrix_ = 0x7fa77dc05a90
	matrix.rows_ = 5
	matrix.cols_ = 5
	DeleteMatrix() {
		matrix = 0x7ffee14b06e0
		matrix.matrix_ = 0
		matrix.rows_ = 5
		matrix.cols_ = 5
	}  // DeleteMatrix()
	matrix = 0x7ffee14b06e0
	matrix.matrix_ = 0
	matrix.rows_ = 5
	matrix.cols_ = 5
}  //~EMatrix()
========================================================

EMatrix dest = std::move(return_rvalue()):
EMatrix(int rows, int cols) {
	matrix = 0x7ffee14b06e0
	matrix.matrix_ = 0
	matrix.rows_ = 3
	matrix.cols_ = 4
	CreateMatrix() {
		matrix = 0x7ffee14b06e0
		matrix.matrix_ = 0x7fa77dc05b80
		matrix.rows_ = 3
		matrix.cols_ = 4
		printMatrix() {
			0x7fa77dc05b98: 6.93457e-310 6.93457e-310 0 1
			0x7fa77dc05bb8: 2 3 4 5
			0x7fa77dc05bd8: 6 7 8 9
		}  // PrintMatrix()
	}  // CreateMatrix()
}  // EMatrix(int rows, int cols)
EMatrix(EMatrix&& other) {
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	operator=(EMatrix&& other) {
		matrix = 0x7ffee14b06c0
		matrix.matrix_ = 0
		matrix.rows_ = 0
		matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	}  // operator=(EMatrix&& other)
	  // moved from: other.matrix_ = 0
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0x7fa77dc05b80
	matrix.rows_ = 3
	matrix.cols_ = 4
		printMatrix() {
			0x7fa77dc05b98: 6.93457e-310 6.93457e-310 0 1
			0x7fa77dc05bb8: 2 3 4 5
			0x7fa77dc05bd8: 6 7 8 9
		}  // PrintMatrix()
}  //EMatrix(EMatrix&& other)
~EMatrix() {
	matrix = 0x7ffee14b06e0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	matrix = 0x7ffee14b06e0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
}  //~EMatrix()
EMatrix(const EMatrix& other) {
	matrix = 0x7ffee14b06a0
	matrix.matrix_ = 0
	matrix.rows_ = 0
	matrix.cols_ = 0
	operator=(const EMatrix& other) {
		matrix = 0x7ffee14b06a0
		matrix.matrix_ = 0
		matrix.rows_ = 0
		matrix.cols_ = 0
	DeleteMatrix() {
	}  // DeleteMatrix()
	CreateMatrix() {
		matrix = 0x7ffee14b06a0
		matrix.matrix_ = 0x7fa77dc05c70
		matrix.rows_ = 3
		matrix.cols_ = 4
		printMatrix() {
			0x7fa77dc05c88: 0 0 0 0
			0x7fa77dc05ca8: 0 0 0 0
			0x7fa77dc05cc8: 0 0 0 0
		}  // PrintMatrix()
	}  // CreateMatrix()
	matrix_dest after copying:
		printMatrix() {
			0x7fa77dc05c88: 6.93457e-310 6.93457e-310 0 1
			0x7fa77dc05ca8: 2 3 4 5
			0x7fa77dc05cc8: 6 7 8 9
		}  // PrintMatrix()
	}  // operator=(const EMatrix& other)
		// copied from: other.matrix_ = 0x7fa77dc05b80
	matrix = 0x7ffee14b06a0
	matrix.matrix_ = 0x7fa77dc05c70
	matrix.rows_ = 3
	matrix.cols_ = 4
		printMatrix() {
			0x7fa77dc05c88: 6.93457e-310 6.93457e-310 0 1
			0x7fa77dc05ca8: 2 3 4 5
			0x7fa77dc05cc8: 6 7 8 9
		}  // PrintMatrix()
}  //EMatrix(const EMatrix& other)
~EMatrix() {
	matrix = 0x7ffee14b06a0
	matrix.matrix_ = 0x7fa77dc05c70
	matrix.rows_ = 3
	matrix.cols_ = 4
	DeleteMatrix() {
		matrix = 0x7ffee14b06a0
		matrix.matrix_ = 0
		matrix.rows_ = 3
		matrix.cols_ = 4
	}  // DeleteMatrix()
	matrix = 0x7ffee14b06a0
	matrix.matrix_ = 0
	matrix.rows_ = 3
	matrix.cols_ = 4
}  //~EMatrix()
~EMatrix() {
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0x7fa77dc05b80
	matrix.rows_ = 3
	matrix.cols_ = 4
	DeleteMatrix() {
		matrix = 0x7ffee14b06c0
		matrix.matrix_ = 0
		matrix.rows_ = 3
		matrix.cols_ = 4
	}  // DeleteMatrix()
	matrix = 0x7ffee14b06c0
	matrix.matrix_ = 0
	matrix.rows_ = 3
	matrix.cols_ = 4
}  //~EMatrix()
===================END===================
Process:         man_test_runner [20728]
Path:            /opt/goinfre/*/man_test_runner
Load Address:    0x10e74f000
Identifier:      man_test_runner
Version:         ???
Code Type:       X86-64
Platform:        macOS
Parent Process:  leaks [20727]

Date/Time:       2023-08-28 00:14:09.880 +0300
Launch Time:     2023-08-28 00:14:09.370 +0300
OS Version:      macOS 11.6.6 (20G624)
Report Version:  7
Analysis Tool:   /Applications/Xcode.app/Contents/Developer/usr/bin/leaks
Analysis Tool Version:  Xcode 13.2.1 (13C100)

Physical footprint:         472K
Physical footprint (peak):  472K
----

leaks Report Version: 4.0
Process 20728: 173 nodes malloced for 84 KB
Process 20728: 0 leaks for 0 total leaked bytes.

